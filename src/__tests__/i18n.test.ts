import { describe, it, expect } from 'vitest';
import { GaqlBuilder } from '../gaqlBuilder';

describe('GaqlBuilder - Internationalization', () => {
  describe('Unicode character support', () => {
    it('should handle Japanese characters in values', () => {
      const query = new GaqlBuilder()
        .select(['name'])
        .from('campaign')
        .where('name', '=', 'ã‚­ãƒ£ãƒ³ãƒšãƒ¼ãƒ³')
        .build();
      expect(query).toContain("'ã‚­ãƒ£ãƒ³ãƒšãƒ¼ãƒ³'");
    });

    it('should handle Arabic characters in values', () => {
      const query = new GaqlBuilder()
        .select(['name'])
        .from('campaign')
        .where('name', '=', 'Ø­Ù…Ù„Ø© Ø¥Ø¹Ù„Ø§Ù†ÙŠØ©')
        .build();
      expect(query).toContain("'Ø­Ù…Ù„Ø© Ø¥Ø¹Ù„Ø§Ù†ÙŠØ©'");
    });

    it('should handle emoji in values', () => {
      const query = new GaqlBuilder()
        .select(['name'])
        .from('campaign')
        .where('name', '=', 'ðŸš€ Launch Campaign')
        .build();
      expect(query).toContain("'ðŸš€ Launch Campaign'");
    });

    it('should handle mixed scripts in complex queries', () => {
      const query = new GaqlBuilder()
        .select(['name', 'status'])
        .from('campaign')
        .whereContainsAny('name', ['ä¸­æ–‡', 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©', '×¢×‘×¨×™×ª'])
        .build();
      expect(query).toContain("'ä¸­æ–‡'");
      expect(query).toContain("'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©'");
      expect(query).toContain("'×¢×‘×¨×™×ª'");
    });
  });
});
